{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hledger-lots","text":"<p>This package helps hledger users to add and manage transactions involving buying and selling commodities like stock, currency, etc.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#add-transaction","title":"Add transaction","text":"<p>Instead of editing the journal file directly to add a commodity purchase or sale, answer some interactive prompts with the following benefits:</p> <ul> <li>Validation of allowed values for each field</li> <li>Fuzzy search completion using previous transaction data in the journal</li> <li>Select the answer between possible values or autocomplete when only one answer is allowed.</li> </ul>"},{"location":"#automatic-lots","title":"Automatic Lots","text":"<p>The most convoluted aspect of using hledger for investment is to manage lots because when selling a commodity, you need to use its cost, which is buried deep down in your journal, instead of the sale price, which is more easily available to add the correct profit/loss of the trade.</p> <p>To calculate the cost, there are some methods you can apply and hledger doesn't provide tools to do it, so you are on your own. Hledger-lots calculate the cost without the need to alocate each purchase to a specific subaccount or tag. When you use <code>hledger-lots sell</code>, it traverse the journal and arrive to the correct cost without additional information.</p> <p>You can choose between two diferrent methods to calculate the cost of selling lots:</p> <ul> <li>FIFO: First In First Out</li> <li>AVERAGE COST: Average Cost of all previous purchase. It is as if selling a proportional part of each previous sale.</li> </ul>"},{"location":"#automatic-price-download","title":"Automatic Price Download","text":"<p>One simple command to automatically download market price from Yahoo Finance for choosen commodities as explained here. </p>"},{"location":"#reports","title":"Reports","text":"<p>To get information about the commodities, there is more 2 commands:</p> command description view Get the lots and indicators for a specific commodity list Get the indicators for all commodities as a table <p>The indicators provided by these command are explained here.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>Documentation with usage information can be found here</p>"},{"location":"#installation","title":"Installation","text":""},{"location":"#requirements","title":"Requirements","text":"<ul> <li>python</li> <li>hledger</li> </ul>"},{"location":"#command","title":"Command","text":"<pre><code>pip install --upgrade hledger-lots\n</code></pre>"},{"location":"#workflow","title":"Workflow","text":"<ol> <li>Add purchase using the command buy or edit the journal as usual using \"@\" notation. Don't bother creating subaccounts or tags with unique lot name. See the some examples here</li> <li>Download market price history as price directive using the command prices</li> <li>View financial indicators for a specific commodity using view or a summary of all commodities using list. Optionally update market prices from Yahoo Finance using the flag --apend-prices-to [file path]</li> <li>When you sell, use the command sell instead of adding the transactions manually. Hledger-lots will generate the correct transaction and append to the selected journal if you confirm the transaction is correct. See transaction tags with interesting indicators about the current trade</li> </ol> <p>By default the sale is created using FIFO method. Use the option flag \"--avg-cost\" to change it to Average Cost</p>"},{"location":"#indicators","title":"Indicators","text":""},{"location":"#basic-indicators","title":"Basic Indicators","text":"<ul> <li>Commodity Name</li> <li>Total Quantity Purchased</li> <li>Total Amount Purchased</li> <li>Average Cost</li> </ul>"},{"location":"#market-indicators","title":"Market Indicators","text":"<p>For commodities with price directives on a date after the last purchase, you will have also the following indicators:</p> <ul> <li>Last Market Price</li> <li>Market Amount: Quantitty Purchased * Last Market Price</li> <li>Market Profit: Market Amount - Amount Purchased</li> <li>Last Market Date</li> <li>XIRR</li> </ul>"},{"location":"#xirr","title":"XIRR","text":"<p>The sale transaction gives you the calculated xirr as tag, which is the internal rate of return of an investment based on a specified series of irregularly spaced cash flows. This value is annual percentage rate following the 30/360US day count convention. It is a good metric to compare the investment return with a benchmark like the S&amp;P or the T-Bill, for example.</p> <p>Note the benchmark can use another day count convention, so this comparison may not be 100% precise. This app may in the future offer others day count convention for xirr calculation.</p>"},{"location":"#checks","title":"Checks","text":"<p>It is recommended to use the option --check to ensure you past selling transaction has the correct cost according to the choosen cost method. It can be enabled by setting the environment variable HLEDGER_LOTS_CHECK to \"true\". It can be disabled with the option --no-check or setting the environment variable HLEDGER_LOTS_CHECK to \"false\".</p> <p>At the moment the default is set to \"false\", but expect it to be turned to \"true\" in future releases.</p>"},{"location":"#limitations","title":"Limitations","text":"<ul> <li>No short-selling</li> <li>Each commodity can have only one base currency. For example, it is not possible to buy AAPL with USD and later with EUR.</li> </ul>"},{"location":"market_prices/","title":"Automatic Market Prices Download","text":"<p>Hledger-lots can download daily market prices from Yahoo Finance and output as market price directive, so you get updated xirr calculation and run regular hledger reports using market prices.</p>"},{"location":"market_prices/#setup","title":"Setup","text":"<p>Add a yahoo_ticker tag to the comment of a commodity directive with the value of the ticker in Yahoo Finance.</p> <p>IMPORTANT: You may need to add double quotes between the commodity name because hledger accepts only word characters without it</p>"},{"location":"market_prices/#examples","title":"Examples:","text":"<pre><code>commodity AAPL       ; yahoo_ticker:AAPL                                      \ncommodity \"PETR4\"    ; yahoo_ticker:PETR4.SA                                  \ncommodity BTC        ; yahoo_ticker:BTC-USD \ncommodity EURUSD     ; yahoo_ticker:EURUSD=X\n</code></pre> <p>For output example, see here</p>"},{"location":"market_prices/#downloading","title":"Downloading","text":"<p>Run <code>hledger-lots prices -f [journal file]</code>. For those commodities that have a yahoo_ticker tag according to the example above, hledger-lots will download daily historical prices in a date range according to the rule below, so the user doesn't need to care about start and end dates.</p> Condition Start Date End Date no market price First Purchase Yesterday have market price Next day of the last price Yesterday market price later or equal yesterday No download No download"},{"location":"output/","title":"Output examples","text":""},{"location":"output/#sell","title":"sell","text":"<p>Besides the transaction, constructed according to FIFO or AVERAGE COST without any manual intervention, you have as tags the quantity and price sold, the average cost using FIFO and the xirr of the transaction, as explained here </p> <p></p>"},{"location":"output/#prices","title":"prices","text":"<p>Prices directives are printed to stdout, while error logs are printed to stderr so you can append stdout to a file without the error logs</p> <pre><code>\n\nP 2023-04-17 \"AAPL\" 165.22999572753906 USD\nP 2023-04-18 \"AAPL\" 166.47000122070312 USD\nP 2023-04-19 \"AAPL\" 167.6300048828125 USD\nP 2023-04-20 \"AAPL\" 166.64999389648438 USD\nP 2023-04-21 \"AAPL\" 165.02000427246094 USD\nP 2023-04-24 \"AAPL\" 165.3300018310547 USD\nP 2023-04-25 \"AAPL\" 163.77000427246094 USD\nP 2023-04-26 \"AAPL\" 163.75999450683594 USD\nP 2023-04-27 \"AAPL\" 168.41000366210938 USD\nP 2023-04-28 \"AAPL\" 169.67999267578125 USD\nP 2023-05-01 \"AAPL\" 169.58999633789062 USD\n; stderr: Nothing downloaded for PETR4.SA between 2023-04-29 and 2023-05-02\n</code></pre>"},{"location":"output/#view","title":"view","text":"<pre><code>$ python -m hledger_lots -f docs/examples/data.journal  view -c AAPL\ndate          price  base_cur      qtty  acct\n----------  -------  ----------  ------  ------------\n2022-01-05      160  USD              0  Asset:Stocks\n2022-01-10      145  USD              4  Asset:Stocks\n2022-01-20      168  USD             15  Asset:Stocks\n\nInfo\n----\nCommodity:      AAPL\nQuantity:       19\nAmount:         3,100.00\nAverage Cost:   163.1579\n\nMarket Price:  163.7700\nMarket Amount: 3,111.63\nMarket Profit: 11.63\nMarket Date:   2023-04-25\nXirr:          0.0029% (APR 30/360US)\n\n</code></pre>"},{"location":"output/#list","title":"list","text":""},{"location":"output/#plain","title":"plain","text":"<pre><code>$ python -m hledger_lots -f docs/examples/data.journal list\ncomm    cur      qtty  amount      avg_cost    mkt_price  mkt_amount      mkt_profit  mkt_date    xirr\nGOOG  USD         3  306.00      102.0000     104.6100  313.83              7.8300  2023-04-25  0.0200%\nAAPL  USD        19  3,100.00    163.1579     163.7700  3,111.63           11.6300  2023-04-25  0.0029%\n</code></pre>"},{"location":"output/#pretty","title":"pretty","text":"<pre><code>$ python -m hledger_lots -f docs/examples/data.journal list --output-format pretty\n\u250d\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2511\n\u2502 comm   \u2502 cur   \u2502   qtty \u2502 amount   \u2502   avg_cost \u2502   mkt_price \u2502 mkt_amount   \u2502   mkt_profit \u2502 mkt_date   \u2502 xirr    \u2502\n\u251d\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2525\n\u2502 GOOG   \u2502 USD   \u2502      3 \u2502 306.00   \u2502   102.0000 \u2502    104.6100 \u2502 313.83       \u2502       7.8300 \u2502 2023-04-25 \u2502 0.0200% \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 AAPL   \u2502 USD   \u2502     19 \u2502 3,100.00 \u2502   163.1579 \u2502    163.7700 \u2502 3,111.63     \u2502      11.6300 \u2502 2023-04-25 \u2502 0.0029% \u2502\n\u2515\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2519\n</code></pre>"},{"location":"output/#csv","title":"csv","text":"<pre><code>$ python -m hledger_lots -f docs/examples/data.journal list --output-format csv\ncomm,cur,qtty,amount,avg_cost,mkt_price,mkt_amount,mkt_profit,mkt_date,xirr\nGOOG,USD,3,306.00,102.0000,104.6100,313.83,7.83,2023-04-25,0.0200%\nAAPL,USD,19,\"3,100.00\",163.1579,163.7700,\"3,111.63\",11.63,2023-04-25,0.0029%\n</code></pre>"},{"location":"output/#-checkno-check","title":"--check/no-check","text":"<p>The error below was raised for a sale transaction generated using AVERAGE COST after trying to use the view command not setting \"--avg-cost\", so FIFO was used. This command raised a CostMethodError because the cost was not the one expected:</p> <pre><code>$ hledger_lots -f test.journal view -c AAPL --check\n\nhledger_lots.lib.CostMethodError: Error in sale AdjustedTxn(date='2023-03-10', price=1.3066666667, base_cur='BRL', qtty=-15, acct='Ativo:Acoes:AAPL'). Correct price should be 1.2 in currency BRL*\n</code></pre>"},{"location":"tests/","title":"Unit Tests","text":""},{"location":"tests/#test-coverage","title":"Test Coverage","text":""},{"location":"tests/#unit-test","title":"Unit Test","text":""},{"location":"usage/","title":"hledger-lots","text":"<p>Commands to apply FIFO(first-in-first-out) or AVERAGE COST accounting principles without manual management of lots. Useful for transactions involving buying and selling foreign currencies or stocks.</p> <p>To find out more, visit https://github.com/edkedk99/hledger-lots</p> <p>Usage:</p> <pre><code>hledger-lots [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>-f</code>, <code>--file</code> text Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order  or '-f-'. None <code>--version</code> boolean Show the version and exit. <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>buy: </li> <li>list: </li> <li>prices: </li> <li>sell: </li> <li>view: </li> </ul>"},{"location":"usage/#hledger-lots-buy","title":"hledger-lots buy","text":"<p>Create a purchase transaction for a commodity by answering some prompts that tries to avoid errors with validation and using current journal data to filter possible answers and give informations that guides the user thru the process.</p>"},{"location":"usage/#transaction-postings","title":"Transaction postings","text":"<ul> <li> <p>First posting: Negative amount on the cash account where the money was used to pay for the commodity</p> </li> <li> <p>Second Posting: Positive amount of the commodity being bought with its cost using \"@\" symbol</p> </li> </ul> <p>Usage:</p> <pre><code>hledger-lots buy [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>-f</code>, <code>--file</code> text Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order  or '-f-'. None <code>-g</code>, <code>--avg-cost</code> boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false <code>-n</code>, <code>--no-desc</code> text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc:. Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC <code>--check</code> / <code>--no-check</code> boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=true false. Default to false. In the future it will default to true <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"usage/#hledger-lots-list","title":"hledger-lots list","text":"<p>List indicators for all your commodities in a tabular format sorted from higher to lower XIRR. It is advised to use full-screen of the terminal. See the docs for a list of indicators and output examples.</p> <p>It can output in three formats: plain, pretty and csv.</p> <p>Usage:</p> <pre><code>hledger-lots list [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>-f</code>, <code>--file</code> path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order  or '-f-'. None <code>-g</code>, <code>--avg-cost</code> boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false <code>-o</code>, <code>--output-format</code> choice (<code>plain</code> | <code>pretty</code> | <code>csv</code>) Format to output the report <code>plain</code> <code>-n</code>, <code>--no-desc</code> text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc:. Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC <code>--check</code> / <code>--no-check</code> boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=tru false. Default to false. Inthe future it will default to true <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"usage/#hledger-lots-prices","title":"hledger-lots prices","text":"<p>Download market prices from Yahoo Finance and print as price directives. Use BASH redirection to append to the journal or copy/paste the data.</p>"},{"location":"usage/#setup","title":"Setup","text":"<p>Add a \"yahoo_ticker\" tag to the commodity directive with the value of the ticker in Yahoo Finance to download prices</p>"},{"location":"usage/#example","title":"Example","text":"<pre><code>commodity AAPL       ; yahoo_ticker:AAPL\ncommodity \"PETR4\"    ; yahoo_ticker:PETR4.SA\ncommodity BTC        ; yahoo_ticker:BTC-USD\n</code></pre> <p>Usage:</p> <pre><code>hledger-lots prices [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>-f</code>, <code>--file</code> text Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order  or '-f-'. None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"usage/#hledger-lots-sell","title":"hledger-lots sell","text":"<p>Create a transaction with automatic FIFO or AVERAGE COST for a commodity by answering some prompts that tries to avoid errors with validation and using current journal data to filter possible answers give informations that guides the user thru the process.</p> <p>This command also add transaction's comment with some indicators. See an example on \"Output examples\" page of the docs.</p>"},{"location":"usage/#transaction-postings_1","title":"Transaction postings","text":"<ul> <li> <p>First posting: Positive amount on the 'base-currency' in the account that receives the product of the sale.</p> </li> <li> <p>Multiple lot postings: Each posting represents a lot you are selling for the cost price on purchasing date, according to FIFO accounting principles or one postings in case of AVERAGE COST method.</p> </li> <li> <p>Revenue posting: posting that represent Capital Gain or Loss as the difference between the total cost and the amount received on the base-currency.</p> </li> </ul> <p>Usage:</p> <pre><code>hledger-lots sell [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>-f</code>, <code>--file</code> path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order  or '-f-'. None <code>-g</code>, <code>--avg-cost</code> boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false <code>-n</code>, <code>--no-desc</code> text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc:. Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC <code>--check</code> / <code>--no-check</code> boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=true false. Default to false. In the future it will default to true <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"usage/#hledger-lots-view","title":"hledger-lots view","text":"<p>Report lots for a commodity.</p> <p>Show a report with lots for a commodity considering eventual past sale using FIFO or AVERAGE COST accounting principles.</p> <p>Also show some indicators about the lots and performance if there is prices in the journal after the last purchase. See the docs for details</p> <p>Usage:</p> <pre><code>hledger-lots view [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>-f</code>, <code>--file</code> text Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order  or '-f-'. None <code>-g</code>, <code>--avg-cost</code> boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false <code>-c</code>, <code>--commodity</code> text Commodity to get fifo lots None <code>-n</code>, <code>--no-desc</code> text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc:. Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC <code>--check</code> / <code>--no-check</code> boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=true false. Default to false. Inthe future it will default to true <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"usage/#environment-variables","title":"Environment Variables","text":"<p>Some options are suposed to be constant for your workflow. They can be set as environment variables. See below available options:</p> env equivalent option content default LEDGER_FILE --file journal file None HLEDGER_LOTS_AVG_COST --avg-cost true|false false HLEDGER_LOTS_CHECK --check/--no-check true|false false HLEDGER_LOTS_NO_DESC --no-desc &lt;str&gt; None"}]}