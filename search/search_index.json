{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction # This script aims to help hledger's users to add transactions involving buying and selling commodities, which can be FOREX or investments assets, for example When you sell a commodity, you should use the cost and quantity from the purchase date, which is buried deep down in your journal file so you have hledger accounting the correct Capital Gain . You can choose between two diferrent methods to calculate the cost of selling lots: FIFO : First In First Out AVERAGE COST : Average Cost of all previous purchase. It is as if selling a proportional part of each previous sale. This package create a sale transaction according to information provided by the user and traverse the journal file to determine what quantity and lot prices should be used and generate a valid hledger transaction to be appended to the journal with additional helpful calculations as comment tags. When using this package, you don't need to create lots as subaccounts or tag, just add a purchase transaction as usual and when there is a sale, hledger-lots will generate the correct postings adding the cost for you, so you don't need to bother looking for this information. It also generate lots reports so the user can understand his situation with a commodity and check the correctness of the generated sell transaction, including market performance from prices directives , which can be automatically downloaded from Yahoo Finance . To verify your transaction, this package can also check if your past sale has the correct cost. Documentation # Documentation with usage information can be found here Requirements # python hledger Installation # pip install --upgrade hledger-lots Workflow # Add purchase transaction as normal. Don't bother creating subaccounts or tags with unique lot name . See the some examples here When you sell, use the command sell instead of adding the transactions manually. Hledger-lots will generate the correct transaction and print to stdout so you can add to the journal if everything is correct. See transaction tags with interesting indicators about the current trade By default the sale is created using FIFO method. Use the option flag \"--avg-cost\" to change it to Average Cost Reports # To get information about the commodities, there is more 2 commands: command description view Get the lots and indicators for a specific commodity list Get the indicators for all commodities as a table If you add price directives for the commodity in a date after the last purchase, additional indicators will be shown related to the performance of the investment. See indicators help for more detail and market prices to download the prices from Yahoo Finance . Indicators # Basic Indicators # Commodity Name Total Quantity Purchased Total Amount Purchased Average Cost Market Indicators # For commodities with price directives on a date after the last purchase, you will have also the following indicators: Last Market Price Market Amount: Quantitty Purchased * Last Market Price Market Profit: Market Amount - Amount Purchased Last Market Date XIRR XIRR # The sale transaction gives you the calculated xirr as tag, which is the internal rate of return of an investment based on a specified series of irregularly spaced cash flows. This value is annual percentage rate following the 30/360US day count convention. It is a good metric to compare the investment return with a benchmark like the S&P or the T-Bill, for example. Note the benchmark can use another day count convention, so this comparison may not be 100% precise. This app may in the future offer others day count convention for xirr calculation. Checks # It is recommended to use the option --check to ensure you past selling transaction has the correct cost according to the choosen cost method. It can be enabled by setting the environment variable HLEDGER_LOTS_CHECK to \"true\". It can be disabled with the option --no-check or setting the environment variable HLEDGER_LOTS_CHECK to \"false\". At the moment the dafault is set to \"false\", but expect it to be turned to \"true\" in future releases. Limitations # No short-selling Each commodity can have only one base currency. For example, it is not possible to buy AAPL with USD and later with EUR.","title":"Home"},{"location":"#introduction","text":"This script aims to help hledger's users to add transactions involving buying and selling commodities, which can be FOREX or investments assets, for example When you sell a commodity, you should use the cost and quantity from the purchase date, which is buried deep down in your journal file so you have hledger accounting the correct Capital Gain . You can choose between two diferrent methods to calculate the cost of selling lots: FIFO : First In First Out AVERAGE COST : Average Cost of all previous purchase. It is as if selling a proportional part of each previous sale. This package create a sale transaction according to information provided by the user and traverse the journal file to determine what quantity and lot prices should be used and generate a valid hledger transaction to be appended to the journal with additional helpful calculations as comment tags. When using this package, you don't need to create lots as subaccounts or tag, just add a purchase transaction as usual and when there is a sale, hledger-lots will generate the correct postings adding the cost for you, so you don't need to bother looking for this information. It also generate lots reports so the user can understand his situation with a commodity and check the correctness of the generated sell transaction, including market performance from prices directives , which can be automatically downloaded from Yahoo Finance . To verify your transaction, this package can also check if your past sale has the correct cost.","title":"Introduction"},{"location":"#documentation","text":"Documentation with usage information can be found here","title":"Documentation"},{"location":"#requirements","text":"python hledger","title":"Requirements"},{"location":"#installation","text":"pip install --upgrade hledger-lots","title":"Installation"},{"location":"#workflow","text":"Add purchase transaction as normal. Don't bother creating subaccounts or tags with unique lot name . See the some examples here When you sell, use the command sell instead of adding the transactions manually. Hledger-lots will generate the correct transaction and print to stdout so you can add to the journal if everything is correct. See transaction tags with interesting indicators about the current trade By default the sale is created using FIFO method. Use the option flag \"--avg-cost\" to change it to Average Cost","title":"Workflow"},{"location":"#reports","text":"To get information about the commodities, there is more 2 commands: command description view Get the lots and indicators for a specific commodity list Get the indicators for all commodities as a table If you add price directives for the commodity in a date after the last purchase, additional indicators will be shown related to the performance of the investment. See indicators help for more detail and market prices to download the prices from Yahoo Finance .","title":"Reports"},{"location":"#indicators","text":"","title":"Indicators"},{"location":"#basic-indicators","text":"Commodity Name Total Quantity Purchased Total Amount Purchased Average Cost","title":"Basic Indicators"},{"location":"#market-indicators","text":"For commodities with price directives on a date after the last purchase, you will have also the following indicators: Last Market Price Market Amount: Quantitty Purchased * Last Market Price Market Profit: Market Amount - Amount Purchased Last Market Date XIRR","title":"Market Indicators"},{"location":"#xirr","text":"The sale transaction gives you the calculated xirr as tag, which is the internal rate of return of an investment based on a specified series of irregularly spaced cash flows. This value is annual percentage rate following the 30/360US day count convention. It is a good metric to compare the investment return with a benchmark like the S&P or the T-Bill, for example. Note the benchmark can use another day count convention, so this comparison may not be 100% precise. This app may in the future offer others day count convention for xirr calculation.","title":"XIRR"},{"location":"#checks","text":"It is recommended to use the option --check to ensure you past selling transaction has the correct cost according to the choosen cost method. It can be enabled by setting the environment variable HLEDGER_LOTS_CHECK to \"true\". It can be disabled with the option --no-check or setting the environment variable HLEDGER_LOTS_CHECK to \"false\". At the moment the dafault is set to \"false\", but expect it to be turned to \"true\" in future releases.","title":"Checks"},{"location":"#limitations","text":"No short-selling Each commodity can have only one base currency. For example, it is not possible to buy AAPL with USD and later with EUR.","title":"Limitations"},{"location":"market_prices/","text":"Automatic Market Prices Download # Hledger-lots can download daily market prices from Yahoo Finance and append market price directive to the journal, so you get updated xirr calculation and run regular hledger reports using market prices. Setup # Rename those commodities you want hledger-lots to download market according to the rule: \"y.[yahoo ticker name]\" . IMPORTANT: You need to add double quotes between the commodity name because hledger accepts only word characters without it Examples: Company Commodity name Microsoft \"y.MSFT\" Apple \"y.AAPL\" EUR/USD \"y.EURUSD=X\" Bitcoin \"y.BTC-USD\" Downloading # Run hledger-lots list or hledger-lots-view with the option flag --append-prices-to [journal path] or with environment variable HLEDGER_APPEND_PRICES_TO . The journal path can be either the journal file you are reading or another one you prefer to have your prices directives. With the option above, hledger-lots will download the daily market prices for all the commodities that follows the commodity name rule. The time range follows the rule: If there is no market price for a commodity, it will download daily prices from the date of the first purchase until yesterday. If there is a market price for a commodity, it will download daily prices from the date following the last price directive to yesterday","title":"Download Market Prices"},{"location":"market_prices/#automatic-market-prices-download","text":"Hledger-lots can download daily market prices from Yahoo Finance and append market price directive to the journal, so you get updated xirr calculation and run regular hledger reports using market prices.","title":"Automatic Market Prices Download"},{"location":"market_prices/#setup","text":"Rename those commodities you want hledger-lots to download market according to the rule: \"y.[yahoo ticker name]\" . IMPORTANT: You need to add double quotes between the commodity name because hledger accepts only word characters without it Examples: Company Commodity name Microsoft \"y.MSFT\" Apple \"y.AAPL\" EUR/USD \"y.EURUSD=X\" Bitcoin \"y.BTC-USD\"","title":"Setup"},{"location":"market_prices/#downloading","text":"Run hledger-lots list or hledger-lots-view with the option flag --append-prices-to [journal path] or with environment variable HLEDGER_APPEND_PRICES_TO . The journal path can be either the journal file you are reading or another one you prefer to have your prices directives. With the option above, hledger-lots will download the daily market prices for all the commodities that follows the commodity name rule. The time range follows the rule: If there is no market price for a commodity, it will download daily prices from the date of the first purchase until yesterday. If there is a market price for a commodity, it will download daily prices from the date following the last price directive to yesterday","title":"Downloading"},{"location":"output/","text":"Output examples # sell # Besides the transaction, constructed according to FIFO or AVERAGE COST without any manual intervention, you have as tags the quantity and price sold, the average cost using FIFO and the xirr of the transaction, as explained here 2023-04-01 Sold AAPL ; commodity:AAPL, qtty:6.00, price:6.50 ; avg_fifo_cost:5.1167, xirr:1.62% annual percent rate 30/360US Asset:Bank 39.00 USD Asset:Stocks -5.0 AAPL @ 5.1 USD ; buy_date:2023-01-01 Asset:Stocks -1.0 AAPL @ 5.2 USD ; buy_date:2023-01-05 Revenue:Capital Gain -8.30 USD view # FIFO method # date price base_cur qtty acct ---------- ------- ---------- ------ ------------ 2022-01-05 4.0000 USD 0 Asset:Stocks 2022-01-10 5.0000 USD 0 Asset:Stocks 2022-01-20 5.8000 USD 0 Asset:Stocks 2022-02-15 5.1000 USD 0 Asset:Stocks 2023-01-01 5.1000 USD 5 Asset:Stocks 2023-01-05 5.2000 USD 3 Asset:Stocks Info ---- Commodity: AAPL Quantity: 8 Amount: 41.10 Average Cost: 5.1375 Market Price: 6.2000 Market Amount: 49.60 Market Profit: 8.50 Market Date: 2023-07-01 Xirr: 46.1056% (APR 30/360US) AVERAGE COST METHOD # date total_qtty total_amount avg_cost ---------- ------------ -------------- ---------- 2022-01-05 5 20.0000 4.0000 2022-01-10 15 70.0000 4.6667 2022-01-15 12 56.0000 4.6667 2022-01-20 27 143.0000 5.2963 2022-01-25 25 132.4074 5.2963 2022-01-25 19 100.6296 5.2963 2022-02-10 15 79.4444 5.2963 2022-02-10 0 0.0000 0.0000 2022-02-15 5 25.5000 5.1000 2022-12-31 0 0.0000 0.0000 2023-01-01 5 25.5000 5.1000 2023-01-05 8 41.1000 5.1375 Info ---- Commodity: AAPL Quantity: 8 Amount: 41.10 Average Cost: 5.1375 Market Price: 6.2000 Market Amount: 49.60 Market Profit: 8.50 Market Date: 2023-07-01 Xirr: 0.1595% (APR 30/360US) Info # plain # comm cur qtty amount avg_cost mkt_price mkt_amount mkt_profit mkt_date xirr AAPL USD 8 41.1000 5.1375 6.2000 49.60 8.50 2023-07-01 46.1056% BRL USD 55 10.0000 0.1818 GOOG USD 3 57.0000 19.0000 pretty # \u250d\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2511 \u2502 comm \u2502 cur \u2502 qtty \u2502 amount \u2502 avg_cost \u2502 mkt_price \u2502 mkt_amount \u2502 mkt_profit \u2502 mkt_date \u2502 xirr \u2502 \u251d\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2525 \u2502 AAPL \u2502 USD \u2502 8 \u2502 41.1000 \u2502 5.1375 \u2502 6.2000 \u2502 49.60 \u2502 8.50 \u2502 2023-07-01 \u2502 46.1056% \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 BRL \u2502 USD \u2502 55 \u2502 10.0000 \u2502 0.1818 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 GOOG \u2502 USD \u2502 3 \u2502 57.0000 \u2502 19.0000 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2515\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2519 csv # comm,cur,qtty,amount,avg_cost,mkt_price,mkt_amount,mkt_profit,mkt_date,xirr AAPL,USD,8,41.10,5.1375,6.2000,49.60,8.50,2023-07-01,46.1056% BRL,USD,55,10.00,0.1818,,,,, GOOG,USD,3,57.00,19.0000,,,,, --check/no-check # The error below was raised for a sale transaction generated using AVERAGE COST after trying to use the view command not setting \"--avg-cost\", so FIFO was used. This command raised a CostMethodError because the cost was not the one expected: hledger_lots -f test.journal view -c AAPL --check hledger_lots.lib.CostMethodError: Error in sale AdjustedTxn(date='2023-03-10', price=1.3066666667, base_cur='BRL', qtty=-15, acct='Ativo:Acoes:AAPL'). Correct price should be 1.2 in currency BRL","title":"Output examples"},{"location":"output/#output-examples","text":"","title":"Output examples"},{"location":"output/#sell","text":"Besides the transaction, constructed according to FIFO or AVERAGE COST without any manual intervention, you have as tags the quantity and price sold, the average cost using FIFO and the xirr of the transaction, as explained here 2023-04-01 Sold AAPL ; commodity:AAPL, qtty:6.00, price:6.50 ; avg_fifo_cost:5.1167, xirr:1.62% annual percent rate 30/360US Asset:Bank 39.00 USD Asset:Stocks -5.0 AAPL @ 5.1 USD ; buy_date:2023-01-01 Asset:Stocks -1.0 AAPL @ 5.2 USD ; buy_date:2023-01-05 Revenue:Capital Gain -8.30 USD","title":"sell"},{"location":"output/#view","text":"","title":"view"},{"location":"output/#fifo-method","text":"date price base_cur qtty acct ---------- ------- ---------- ------ ------------ 2022-01-05 4.0000 USD 0 Asset:Stocks 2022-01-10 5.0000 USD 0 Asset:Stocks 2022-01-20 5.8000 USD 0 Asset:Stocks 2022-02-15 5.1000 USD 0 Asset:Stocks 2023-01-01 5.1000 USD 5 Asset:Stocks 2023-01-05 5.2000 USD 3 Asset:Stocks Info ---- Commodity: AAPL Quantity: 8 Amount: 41.10 Average Cost: 5.1375 Market Price: 6.2000 Market Amount: 49.60 Market Profit: 8.50 Market Date: 2023-07-01 Xirr: 46.1056% (APR 30/360US)","title":"FIFO method"},{"location":"output/#average-cost-method","text":"date total_qtty total_amount avg_cost ---------- ------------ -------------- ---------- 2022-01-05 5 20.0000 4.0000 2022-01-10 15 70.0000 4.6667 2022-01-15 12 56.0000 4.6667 2022-01-20 27 143.0000 5.2963 2022-01-25 25 132.4074 5.2963 2022-01-25 19 100.6296 5.2963 2022-02-10 15 79.4444 5.2963 2022-02-10 0 0.0000 0.0000 2022-02-15 5 25.5000 5.1000 2022-12-31 0 0.0000 0.0000 2023-01-01 5 25.5000 5.1000 2023-01-05 8 41.1000 5.1375 Info ---- Commodity: AAPL Quantity: 8 Amount: 41.10 Average Cost: 5.1375 Market Price: 6.2000 Market Amount: 49.60 Market Profit: 8.50 Market Date: 2023-07-01 Xirr: 0.1595% (APR 30/360US)","title":"AVERAGE COST METHOD"},{"location":"output/#info","text":"","title":"Info"},{"location":"output/#plain","text":"comm cur qtty amount avg_cost mkt_price mkt_amount mkt_profit mkt_date xirr AAPL USD 8 41.1000 5.1375 6.2000 49.60 8.50 2023-07-01 46.1056% BRL USD 55 10.0000 0.1818 GOOG USD 3 57.0000 19.0000","title":"plain"},{"location":"output/#pretty","text":"\u250d\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2511 \u2502 comm \u2502 cur \u2502 qtty \u2502 amount \u2502 avg_cost \u2502 mkt_price \u2502 mkt_amount \u2502 mkt_profit \u2502 mkt_date \u2502 xirr \u2502 \u251d\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2525 \u2502 AAPL \u2502 USD \u2502 8 \u2502 41.1000 \u2502 5.1375 \u2502 6.2000 \u2502 49.60 \u2502 8.50 \u2502 2023-07-01 \u2502 46.1056% \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 BRL \u2502 USD \u2502 55 \u2502 10.0000 \u2502 0.1818 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 GOOG \u2502 USD \u2502 3 \u2502 57.0000 \u2502 19.0000 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2515\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2537\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2519","title":"pretty"},{"location":"output/#csv","text":"comm,cur,qtty,amount,avg_cost,mkt_price,mkt_amount,mkt_profit,mkt_date,xirr AAPL,USD,8,41.10,5.1375,6.2000,49.60,8.50,2023-07-01,46.1056% BRL,USD,55,10.00,0.1818,,,,, GOOG,USD,3,57.00,19.0000,,,,,","title":"csv"},{"location":"output/#-checkno-check","text":"The error below was raised for a sale transaction generated using AVERAGE COST after trying to use the view command not setting \"--avg-cost\", so FIFO was used. This command raised a CostMethodError because the cost was not the one expected: hledger_lots -f test.journal view -c AAPL --check hledger_lots.lib.CostMethodError: Error in sale AdjustedTxn(date='2023-03-10', price=1.3066666667, base_cur='BRL', qtty=-15, acct='Ativo:Acoes:AAPL'). Correct price should be 1.2 in currency BRL","title":"--check/no-check"},{"location":"usage/","text":"hledger-lots # Commands to apply FIFO(first-in-first-out) or AVERAGE COST accounting principles without manual management of lots. Useful for transactions involving buying and selling foreign currencies or stocks. To find out more, visit https://github.com/edkedk99/hledger-lots Usage: hledger-lots [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None --version boolean Show the version and exit. False --help boolean Show this message and exit. False Subcommands list : sell : view : hledger-lots list # List indicators for all your commodities in a tabular format sorted from higher to lower XIRR . It is advised to use full-screen of the terminal. See the docs for a list of indicators and output examples. It can output in three formats: plain, pretty and csv . Usage: hledger-lots list [OPTIONS] Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None -g , --avg-cost boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false -o , --output-format choice ( plain | pretty | csv ) Format to output the report plain -n , --no-desc text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc: . Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC --check / --no-check boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=tru false. Default to false. Inthe future it will default to true -p , --append-prices-to path Download market price and append to this option file value. Check the doc for info on how to set it up. Can be set with env HLEDGER_LOTS_APPEND_PRICES_TO <function <lambda> at 0x7f267b2bab60> --help boolean Show this message and exit. False hledger-lots sell # Create a transaction with automatic FIFO or AVERAGE COST for a commodity. Generate a transaction that represents a sale of a commodity with the following postings: First posting: Positive amount on the 'base-currency' in the account that receives the product of the sale. Multiple lot postings: Each posting is a different lot you are selling for the cost price on purchasing date, calculated according to FIFO accounting principles. Revenue posting: posting that represent Capital Gain or Loss as the difference between the total cost and the amount received on the base-currency. This command also add transaction's comment with some indicators. See the docs for more info. All flags, except '--file' will be interactively prompted if absent, much like 'hledger-add'. Usage: hledger-lots sell [OPTIONS] Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None -g , --avg-cost boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false -c , --commodity text Commodity you are selling None -n , --no-desc text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc: . Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC --check / --no-check boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=tru false. Default to false. Inthe future it will default to true -s , --commodity-account text What account holds product of the sale. Only used with --avg-cost None -a , --cash-account text What account entered the product of the sell None -r , --revenue-account text Account that represent capital gain/loss None -d , --date text Date of the transaction (YYYY-mm-dd) None -q , --quantity float Quantity being sold None -p , --price float Price being sold None --help boolean Show this message and exit. False hledger-lots view # Report lots for a commodity. Show a report with lots for a commodity considering eventual past sale using FIFO or AVERAGE COST accounting principles. Also show some indicators about the lots and performance if there is prices in the journal after the last purchase. See the docs for details All flags, except '--file' will be interactively prompted if absent, much like 'hledger-add'. Usage: hledger-lots view [OPTIONS] Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None -g , --avg-cost boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false -c , --commodity text Commodity to get fifo lots None -n , --no-desc text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc: . Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC --check / --no-check boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=true false. Default to false. Inthe future it will default to true -p , --append-prices-to path Download market price and append to this option file value. Check the doc for info on how to set it up. Can be set with env HLEDGER_APPEND_PRICES_TO <function <lambda> at 0x7f267b2ba8e0> --help boolean Show this message and exit. False Environment Variables # Some options are suposed to be constant for your workflow. They can be set as environment variables . See below available options: env equivalent option content default HLEDGER_LOTS_AVG_COST --avg-cost true|false false HLEDGER_LOTS_CHECK --check/--no-check true|false false HLEDGER_NO_DESC --no-desc <str> None","title":"Usage"},{"location":"usage/#hledger-lots","text":"Commands to apply FIFO(first-in-first-out) or AVERAGE COST accounting principles without manual management of lots. Useful for transactions involving buying and selling foreign currencies or stocks. To find out more, visit https://github.com/edkedk99/hledger-lots Usage: hledger-lots [OPTIONS] COMMAND [ARGS]... Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None --version boolean Show the version and exit. False --help boolean Show this message and exit. False Subcommands list : sell : view :","title":"hledger-lots"},{"location":"usage/#hledger-lots-list","text":"List indicators for all your commodities in a tabular format sorted from higher to lower XIRR . It is advised to use full-screen of the terminal. See the docs for a list of indicators and output examples. It can output in three formats: plain, pretty and csv . Usage: hledger-lots list [OPTIONS] Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None -g , --avg-cost boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false -o , --output-format choice ( plain | pretty | csv ) Format to output the report plain -n , --no-desc text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc: . Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC --check / --no-check boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=tru false. Default to false. Inthe future it will default to true -p , --append-prices-to path Download market price and append to this option file value. Check the doc for info on how to set it up. Can be set with env HLEDGER_LOTS_APPEND_PRICES_TO <function <lambda> at 0x7f267b2bab60> --help boolean Show this message and exit. False","title":"list"},{"location":"usage/#hledger-lots-sell","text":"Create a transaction with automatic FIFO or AVERAGE COST for a commodity. Generate a transaction that represents a sale of a commodity with the following postings: First posting: Positive amount on the 'base-currency' in the account that receives the product of the sale. Multiple lot postings: Each posting is a different lot you are selling for the cost price on purchasing date, calculated according to FIFO accounting principles. Revenue posting: posting that represent Capital Gain or Loss as the difference between the total cost and the amount received on the base-currency. This command also add transaction's comment with some indicators. See the docs for more info. All flags, except '--file' will be interactively prompted if absent, much like 'hledger-add'. Usage: hledger-lots sell [OPTIONS] Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None -g , --avg-cost boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false -c , --commodity text Commodity you are selling None -n , --no-desc text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc: . Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC --check / --no-check boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=tru false. Default to false. Inthe future it will default to true -s , --commodity-account text What account holds product of the sale. Only used with --avg-cost None -a , --cash-account text What account entered the product of the sell None -r , --revenue-account text Account that represent capital gain/loss None -d , --date text Date of the transaction (YYYY-mm-dd) None -q , --quantity float Quantity being sold None -p , --price float Price being sold None --help boolean Show this message and exit. False","title":"sell"},{"location":"usage/#hledger-lots-view","text":"Report lots for a commodity. Show a report with lots for a commodity considering eventual past sale using FIFO or AVERAGE COST accounting principles. Also show some indicators about the lots and performance if there is prices in the journal after the last purchase. See the docs for details All flags, except '--file' will be interactively prompted if absent, much like 'hledger-add'. Usage: hledger-lots view [OPTIONS] Options: Name Type Description Default -f , --file path Inform the journal file path. If \"-\", read from stdin. Without this flag read from $LEDGER_FILE or ~/.hledger.journal in this order or '-f-'. None -g , --avg-cost boolean Change cost method to \"average cost\"\". Can be set with env HLEDGER_LOTS_IS_AVG_COST=true false. Default to false -c , --commodity text Commodity to get fifo lots None -n , --no-desc text Description to be filtered out from calculation. Needed when closing journal with '--show-costs' option. Works like: not:desc: . Will not be prompted if absent. If closed with default description, the value of this option should be: 'opening closing balances'. Can be set with env HLEDGER_LOTS_NO_DESC --check / --no-check boolean Enable/Disable check on the commodities previous transactions to ensure it is following the choosen method. Can be set with env HLEDGER_LOTS_CHECK=true false. Default to false. Inthe future it will default to true -p , --append-prices-to path Download market price and append to this option file value. Check the doc for info on how to set it up. Can be set with env HLEDGER_APPEND_PRICES_TO <function <lambda> at 0x7f267b2ba8e0> --help boolean Show this message and exit. False","title":"view"},{"location":"usage/#environment-variables","text":"Some options are suposed to be constant for your workflow. They can be set as environment variables . See below available options: env equivalent option content default HLEDGER_LOTS_AVG_COST --avg-cost true|false false HLEDGER_LOTS_CHECK --check/--no-check true|false false HLEDGER_NO_DESC --no-desc <str> None","title":"Environment Variables"}]}